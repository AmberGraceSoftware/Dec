"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[81],{81916:e=>{e.exports=JSON.parse('{"functions":[{"name":"Render","desc":"Reconciles a Virtual Instance into the root\'s Roblox Instance. After the\\ncall, the Virtual Instance is sealed and cannot be mutated. Instead, you\\nshould use Dec Observers to mutate the Instance after reconciliation.\\n\\nIt returns the Reconciled Node.","params":[{"name":"node","desc":"","lua_type":"VirtualInstance"}],"returns":[{"desc":"","lua_type":"ReconciledNode"}],"function_type":"method","source":{"line":61,"path":"src/Reconciler/Root.luau"}},{"name":"Unmount","desc":"Unmounts the Virtual Instance from the Root, causing it to be deleted from\\nthe DataModel.","params":[],"returns":[],"function_type":"method","source":{"line":80,"path":"src/Reconciler/Root.luau"}},{"name":"Destroy","desc":"Unmounts and destroys the Root and its underlying Roblox Instance. This\\nfunction should be called before discarding a Root object to ensure memory\\nis properly freed.","params":[],"returns":[],"function_type":"method","source":{"line":94,"path":"src/Reconciler/Root.luau"}}],"properties":[],"types":[],"name":"Root","desc":"Entry point for rendering Dec applications.\\n\\nIn order to write a Dec application, you need to first create a root via\\n[Dec.Root], and render an instance using [Root:Render()]\\n\\n```lua\\nlocal PlayerGui = game.Players.LocalPlayer:WaitForChild(\\"PlayerGui\\"))\\nlocal root = Dec.Root(PlayerGui)\\n\\nlocal App = Dec.New(\\"ScreenGui\\", {\\n    ResetOnSpawn = false\\n}, {\\n    HelloLabel = Dec.New(\\"TextLabel\\", {\\n        BackgroundColor3 = Color3.fromHex(\\"ddd\\"),\\n        Text = \\"Hello, World!\\",\\n        TextColor3 = Color3.fromHex(\\"000\\"),\\n        TextStrokeTransparency = 1\\n    }, {\\n        RoundedRect = Dec.New(\\"UICorner\\", {\\n            CornerRadius = UDim.new(0.2, 0)\\n        })\\n    })\\n})\\n\\nroot.Render(App)\\n```\\n\\n*(Constructed via [Dec.Root])*","source":{"line":45,"path":"src/Reconciler/Root.luau"}}')}}]);