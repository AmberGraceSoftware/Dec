"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8860],{82360:e=>{e.exports=JSON.parse('{"functions":[{"name":"ResetVelocity","desc":"Sets the velocity of the spring to the zero (or the origin vector). Useful\\nin conjunction with [Spring:SetPosition]","params":[],"returns":[],"function_type":"method","source":{"line":148,"path":"src/Observables/EasedObject.luau"}},{"name":"CurrentTarget","desc":"Gets the current value of the spring\'s target observable.","params":[],"returns":[],"function_type":"method","source":{"line":170,"path":"src/Observables/EasedObject.luau"}},{"name":"SetPosition","desc":"Moves the current position of the spring to a new value, keeping the current\\nvelocity intact.","params":[],"returns":[],"function_type":"method","source":{"line":200,"path":"src/Observables/EasedObject.luau"}}],"properties":[],"types":[],"name":"IntSpring","desc":"#### Inherits [Observable]\\n\\nObservable object which simulates critically damped spring easing towards\\nanother observable\'s value, rounding to the nearest integer towards the\\ntarget value.\\n\\nUseful for UI components like currency counters.\\n\\n*(Constructed via [Dec.IntSpring])*","tags":["Observable"],"source":{"line":56,"path":"src/Observables/IntSpring.luau"}}')}}]);